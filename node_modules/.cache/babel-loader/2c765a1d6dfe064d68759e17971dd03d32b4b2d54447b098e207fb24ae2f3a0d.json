{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = async cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-practice-backend-2f698-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n      try {\n        await sendRequest();\n        dispatch(uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!'\n        }));\n      } catch (error) {\n        sendCartData().catch(error => dispatch(uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Error sending cart data!'\n        })));\n      }\n\n      // const responseData = await response.json();\n    };\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","catch","cartActions","actions"],"sources":["/home/mctintor/repos/react-advanced-redux-practice/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n    },\n    reducers: {\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            state.totalQuantity++\n            if (!existingItem) {\n                state.items.push({id: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name: newItem.title})\n            } else {\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\n            }\n        },\n        removeItemFromCart(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find(item => item.id === id);\n            state.totalQuantity--;\n            if (existingItem.quantity === 1) {\n                state.items  = state.items.filter(item => item.id !== id)\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n            }\n        }\n    }\n})\n\nexport const sendCartData = async (cart) => {\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status: 'pending',\n            title: 'Sending...',\n            message: 'Sending cart data!'\n          }));\n          const sendRequest = async() => {\n            const response = await fetch('https://redux-practice-backend-2f698-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n            method: 'PUT',\n             body: JSON.stringify(cart), \n           });\n           if (!response.ok) {\n             throw new Error('Sending cart data failed');\n           }\n           \n           try {\n            await sendRequest();\n\n           dispatch(uiActions.showNotification({\n             status: 'success',\n             title: 'Success!',\n             message: 'Sent cart data successfully!'\n           }))\n            } catch (error) {\n            sendCartData().catch((error) => (\n                dispatch(uiActions.showNotification({\n                  status: 'error',\n                  title: 'Error!',\n                  message: 'Error sending cart data!'\n                }))\n              )) \n           }\n     \n           // const responseData = await response.json();\n         }      \n    }\n}\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}