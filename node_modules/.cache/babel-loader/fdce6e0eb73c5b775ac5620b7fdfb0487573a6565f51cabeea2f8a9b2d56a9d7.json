{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-practice-backend-2f698-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Error sending cart data!'\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://redux-practice-backend-2f698-default-rtdb.europe-west1.firebasedatabase.app/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","fetchCartData","fetchData","data","json","cartData","replaceCart","items","totalQuantity"],"sources":["/home/mctintor/repos/react-advanced-redux-practice/src/components/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status: 'pending',\n            title: 'Sending...',\n            message: 'Sending cart data!'\n        }));\n\n        const sendRequest = async () => {\n            const response = await fetch('https://redux-practice-backend-2f698-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n                method: 'PUT',\n                body: JSON.stringify(cart),\n            });\n            if (!response.ok) {\n                throw new Error('Sending cart data failed');\n            }\n        };\n\n        try {\n            await sendRequest();\n            dispatch(uiActions.showNotification({\n                status: 'success',\n                title: 'Success!',\n                message: 'Sent cart data successfully!'\n            }));\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Error sending cart data!'\n            }));\n        }\n    };\n};\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n            const fetchData = async () => {\n                const response = await fetch('https://redux-practice-backend-2f698-default-rtdb.europe-west1.firebasedatabase.app/cart.json')\n                if (!response.ok) {\n                    throw new Error ('Could not fetch data');\n                }\n                const data = await response.json();\n                return data\n            }\n\n            try {\n                const cartData = await fetchData();\n                dispatch(cartActions.replaceCart({\n                    items: cartData.items || [],\n                    totalQuantity: cartData.totalQuantity\n                }))\n            } catch (error) {\n                dispatch(\n                    uiActions.showNotification({\n                        status: 'error',\n                        title: 'Error!',\n                        message: 'Fetching cart data failed!'\n                    })\n                )\n            }\n        }\n    }"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+FAA+F,EAAE;QAC1HC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC7B,CAAC,CAAC;MACF,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAED,IAAI;MACA,MAAMR,WAAW,CAAC,CAAC;MACnBL,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZd,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOf,QAAQ,IAAK;IACnB,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,+FAA+F,CAAC;MAC7H,IAAI,CAACD,QAAQ,CAACM,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,sBAAsB,CAAC;MAC5C;MACA,MAAMI,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAAC;MAClChB,QAAQ,CAACH,WAAW,CAACuB,WAAW,CAAC;QAC7BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC5B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZd,QAAQ,CACJJ,SAAS,CAACK,gBAAgB,CAAC;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}